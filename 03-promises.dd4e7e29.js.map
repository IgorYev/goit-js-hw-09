{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAEpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIbJ,SAASY,iBAAiB,oBAAoB,KAC5Cb,EAAKa,iBAAiB,UAAUC,eAAeC,GAC7CA,EAAMC,iBAEN,MAAMC,EAAaC,SAASC,KAAKC,SAASf,MAAMgB,OAC1CC,EAAYJ,SAASC,KAAKC,SAASG,KAAKF,OACxCG,EAAcN,SAASC,KAAKC,SAASK,OAAOJ,OAElD,IAAK,IAAIK,EAAI,EAAGA,GAAKF,EAAaE,IAAK,CACrC,MAAMC,EAAeV,GAAcS,EAAI,GAAKJ,EAC5C,IACE,MAAMM,QAAezB,EAAcuB,EAAGC,GACtCE,EAAA/B,GAASgC,OAAOC,QAAQ,uBAAqBH,EAAIxB,eAAoBwB,EAAEvB,U,CACvE,MAAO2B,GACPH,EAAA/B,GAASgC,OAAOG,QAAQ,sBAAoBD,EAAE5B,eAAmB4B,EAAE3B,U,KAGvE","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  form.addEventListener('submit', async function(event) {\n    event.preventDefault();\n\n    const delayInput = parseInt(this.elements.delay.value);\n    const stepInput = parseInt(this.elements.step.value);\n    const amountInput = parseInt(this.elements.amount.value);\n\n    for (let i = 1; i <= amountInput; i++) {\n      const currentDelay = delayInput + (i - 1) * stepInput;\n      try {\n        const result = await createPromise(i, currentDelay);\n        Notiflix.Notify.success(`✅ Fulfilled promise ${result.position} in ${result.delay}ms`);\n      } catch (error) {\n        Notiflix.Notify.failure(`❌ Rejected promise ${error.position} in ${error.delay}ms`);\n      }\n    }\n  });\n});\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","async","event","preventDefault","delayInput","parseInt","this","elements","value","stepInput","step","amountInput","amount","i","currentDelay","result","$parcel$interopDefault","Notify","success","error","failure"],"version":3,"file":"03-promises.dd4e7e29.js.map"}